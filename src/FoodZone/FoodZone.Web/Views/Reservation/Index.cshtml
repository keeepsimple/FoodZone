@model ReservationViewModel
@{
    ViewBag.Title = "Đặt Bàn";
    var now = DateTime.Now;
    var nextDate = DateTime.Now.AddDays(1);


    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
}

<div class="contact-us-area mt-5">
    <div class="container custom-area col">
        <div class="row">
            @if (Request.IsAuthenticated)
            {
                using (Html.BeginForm("Index", "Reservation", FormMethod.Post, new { @class = "row", role = "form" }))
                {
                    <div class="col w-50">
                        <div class="booking-box">

                            @Html.AntiForgeryToken()
                            <div class="comment-box">
                                <h5 class="text-uppercase">Đặt bàn</h5>
                                @Html.ValidationSummary("", new { @class = "text-danger" })
                                <div class="col mt-3">
                                    <div class="col-md-12 col-custom">
                                        <div class="input-item mb-4">
                                            <div class="title-booking font-weight-bold">Tên khách hàng</div>
                                            @Html.TextBoxFor(m => m.CusName, new { @class = "form-control", @readonly = "readonly", @placeholder = "Tên" })
                                        </div>
                                    </div>
                                    <div class="col-md-12 col-custom">
                                        <div class="input-item mb-4">
                                            <div class="title-booking font-weight-bold">Số điện thoại</div>
                                            @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control", @readonly = "readonly", @placeholder = "Số điện thoại" })
                                        </div>
                                    </div>
                                    <div class="col-12 col-custom">
                                        <div class="input-item mb-4">
                                            <div class="title-booking font-weight-bold">Chọn Combo</div>
                                            @Html.DropDownList("MenuId", null, htmlAttributes: new { @class = "form-select select-single w-50" })
                                            @Html.ValidationMessageFor(model => model.MenuId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-12 col-custom">
                                        <div class="input-item mb-4">
                                            <div class="title-booking font-weight-bold">Thời gian dùng bữa</div>
                                            @if (now.Hour >= 21)
                                            {
                                                <input class="border-0 rounded-0 w-100 input-area email gray-bg text-box single-line" disabled="disabled" id="ReservationDate" name="ReservationDate" type="text" value="@nextDate.ToShortDateString()">
                                            }
                                            else
                                            {
                                                <input class="border-0 rounded-0 w-100 input-area email gray-bg text-box single-line" disabled="disabled" id="ReservationDate" name="ReservationDate" type="text" value="@Model.ReservationDate">
                                            }
                                        </div>
                                    </div>
                                    <div class="col-12 col-custom">
                                        <div class="input-item mb-4 display-flex-col">

                                            <div class="title-booking font-weight-bold">Chọn thời gian đến</div>
                                            <div id="menu" style="position: relative; width:100%">
                                                <ul class="nav nav-tabs nav-menu-custom nav-tabs-floor-booking " style="margin-left:6% ; max-height: 60px; width: 88%; flex-wrap: unset ; overflow-x: hidden">

                                                    @if (now.Hour <= 14 || now.Hour >= 21)
                                                    {
                                                        for (int i = 11; i < 14; i++)
                                                        {
                                                            if (i >= now.Hour || now.Hour >= 21)
                                                            {
                                                                if (i == now.Hour)
                                                                {

                                                                    for (int j = 0; j < 60; j += 15)
                                                                    {
                                                                        if (j > now.Minute)
                                                                        {
                                                                            <li class="nav-item mr-2 p-1">
                                                                                <input class="form-check-input input-custom-table" name="Time" type="radio" id="@i@j" value="@i:@j">
                                                                                <label class="form-check-label label-time " for="@i@j">@i:@(j == 0 ? "00" : j.ToString()) </label>
                                                                            </li>
                                                                        }

                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    for (int j = 0; j < 60; j += 15)
                                                                    {
                                                                        <li class="nav-item mr-2 p-1">
                                                                            <input class="form-check-input input-custom-table" name="Time" type="radio" id="@i@j" value="@i:@j">
                                                                            <label class="form-check-label label-time" for="@i@j">@i:@(j == 0 ? "00" : j.ToString()) </label>
                                                                        </li>
                                                                    }
                                                                }

                                                            }
                                                        }
                                                    }
                                                    else
                                                    {
                                                        for (int i = 18; i < 21; i++)
                                                        {
                                                            if (i >= now.Hour || now.Hour >= 14)
                                                            {
                                                                if (i == now.Hour)
                                                                {

                                                                    for (int j = 0; j < 60; j += 15)
                                                                    {
                                                                        if (j > now.Minute)
                                                                        {
                                                                            <li class="nav-item mr-2 p-1">
                                                                                <input class="form-check-input input-custom-table" name="Time" type="radio" id="@i@j" value="@i:@j">
                                                                                <label class="form-check-label label-time" for="@i@j">@i:@(j == 0 ? "00" : j.ToString()) </label>
                                                                            </li>
                                                                        }

                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    for (int j = 0; j < 60; j += 15)
                                                                    {
                                                                        <li class="nav-item mr-2 p-1">
                                                                            <input class="form-check-input input-custom-table" name="Time" type="radio" id="@i@j" value="@i:@j">
                                                                            <label class="form-check-label label-time" for="@i@j">@i:@(j == 0 ? "00" : j.ToString()) </label>
                                                                        </li>
                                                                    }
                                                                }

                                                            }
                                                        }
                                                    }
                                                </ul>
                                                <div id="nav">
                                                    <div id="prev"><</div>
                                                    <div id="next">></div>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                    <div class="col-12 col-custom">
                                        <div class="input-item mb-4">
                                            <div class="title-booking font-weight-bold">Mã ưu đãi của bạn</div>
                                            @Html.DropDownList("CodeId", null, htmlAttributes: new { @class = "form-select select-single w-50" })
                                            @Html.ValidationMessageFor(model => model.CodeId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-12 col-custom">
                                        <div class="input-item mb-4">
                                            <div class="title-booking font-weight-bold">Ghi chú thêm cho nhà hàng: </div>
                                            @Html.TextAreaFor(m => m.Note, new { @class = "border-0 rounded-0 w-100 input-area name gray-bg", @placeholder = "Yêu cầu nhà hàng làm gì đó đặc biệt cho bạn" })
                                        </div>
                                    </div>
                                    <div class="col-12 col-custom mt-40">
                                        <button type="submit" id="submit" name="submit" class="btn flosun-button secondary-btn theme-color rounded-0">
                                            Đặt
                                            bàn
                                        </button>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                    @Html.Action("GetAll", "Table")
                }
            }
            else
            {
                <div class="col">
                    <div class="booking-box">
                        <div class="comment-box">
                            <h5 class="text-uppercase">Vui lòng đăng nhập để đặt bàn</h5>
                            @Html.ActionLink("Đăng Nhập", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink", @class = "btn flosun-button secondary-btn theme-color rounded-0" })
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>



@section scripts{
    <style>
        #prev {
            position: absolute;
            left: 0;
            background-color: #CB2D26;
            padding: 5px;
            color: white;
            cursor: pointer;
            top: 5px;
            border-radius: 1rem;
        }

        #next {
            position: absolute;
            right: 0;
            color: white;
            background-color: #CB2D26;
            padding: 5px;
            cursor: pointer;
            top: 5px;
            border-radius: 1rem;
        }
    </style>
    <script src="~/Assets/js/customize.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.js"></script>
    <script src="~/Scripts/jquery.signalR-2.4.3.min.js"></script>
    <script src="~/signalr/hubs"></script>
    <script>
        const capa = document.getElementById("capa");
        /*const count = document.querySelectorAll("#count");*/
        /*Array.from(count);*/
        const arr = [...document.querySelectorAll(".object #count")]
        console.log(capa)
        function handleChangeCount() {
            const check = capa.value;
            if (check != "") {
                for (var i = 0; i < arr.length; i++) {

                    if (parseInt(check) < 1) {
                        arr[i].offsetParent.childNodes[1].setAttribute('disabled', '');
                    } else if (parseInt(check) > parseInt(arr[i].textContent)) {
                        arr[i].offsetParent.childNodes[1].setAttribute('disabled', '');
                    }
                }
            }
            else {
                for (var i = 0; i < arr.length; i++) {
                    if (parseInt(arr[i].textContent) > 0) {
                        arr[i].offsetParent.childNodes[1].removeAttribute('disabled', '');
                    }
                }

            }
        }
        $(function () {
            var hubNotify = $.connection.tableHub;
            $.connection.hub.logging = true;

            $.connection.hub.start();
            hubNotify.client.refreshAllTable = function () {
                refreshTable();
            };
        });
        function refreshTable() {
            $.ajax({
                url: '/Table/GetAll',
                contentType: 'application/html ; charset:utf-8',
                type: 'GET',
                dataType: 'html',
                success: function (result) {
                    document.getElementById("col-signal").innerHTML = result;
                }
            })
        }

        $('#prev').on('click', function () {
            $('#menu ul').animate({
                scrollLeft: '-=100'
            }, 300, 'swing');
        });

        $('#next').on('click', function () {
            $('#menu ul').animate({
                scrollLeft: '+=100'
            }, 300, 'swing');
        });
    </script>
}
