@model PagedList.IPagedList<User>

@{
    ViewBag.Title = "Quản Lý Tài Khoản";
}

<h2>Quản Lý Tài Khoản</h2>

<div class="row">
    <div class="col-md-6">
        @using (Html.BeginForm("Index", "UserAdmin", FormMethod.Get))
        {
            <div class="form-group mx-md-3 mb-2">
                @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control mr-3" })
                <button type="submit" class="btn">
                    <i class="fas fa-search"></i>
                </button>
                <a href="@Url.Action("Index")" class="btn btn-default">
                    <i class="fas fa-redo"></i>
                </a>
            </div>
        }
    </div>
</div>
@if (!Model.Any())
{
    <h3 class="text-center">Không tìm thấy tài khoản nào.</h3>
}
else
{
    <table class="table table-condensed table-bordered">
        <tr class="d-flex center-title">
            <th class="col-md-6">
                Tên Đăng Nhập
            </th>
            <th class="col-md-6">Quản Lý</th>
        </tr>

        @foreach (var item in Model)
        {
            <tr class="d-flex center-title">
                <td class="col-md-6">
                    <a href="@Url.Action("Edit", new { id = item.Id })">
                        @item.UserName
                    </a>
                </td>
                <td class="col-md-6">
                    <a href="@Url.Action("Edit", "UsersAdmin", new { id = item.Id })" class="btn btn-primary"><i class="fas fa-edit"></i></a>
                </td>
            </tr>
        }
    </table>

    <nav aria-label="Page navigation example">
        <ul class="pagination justify-content-center">
            @{
                var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
                var nextDisabled = !Model.HasNextPage ? "disabled" : "";
                ViewBag.PageRange = 3;
            }
            <li class="page-item">
                <a href="@Url.Action("Index", "UsersAdmin", new { pageIndex = 1, currentFilter = ViewData["CurrentFilter"] })"
                   class="btn page-link @prevDisabled"><<</a>
            <li class="page-item">
                <a href="@Url.Action("Index", "UsersAdmin", new { pageIndex = (Model.PageNumber - 1 <= 0 ? 1 : Model.PageNumber - 1), currentFilter = ViewData["CurrentFilter"] })"
                   class="btn page-link @prevDisabled"><</a>
            </li>
            @for (int i = 1; i <= Model.PageCount; i++)
            {
                if (i >= Model.PageNumber - ViewBag.PageRange && i <= Model.PageNumber + ViewBag.PageRange)
                {
                    <li class="page-item">
                        <a class="@(i == Model.PageNumber ? "Current" : "") page-link"
                           href="@Url.Action("Index", "UsersAdmin", new { page = i, currentFilter = ViewData["CurrentFilter"] })">@i</a>
                    </li>
                }
            }
            <li class="page-item">
                <a href="@Url.Action("Index", "UsersAdmin", new { page = (Model.PageNumber + 1 > Model.PageCount ? Model.PageCount : Model.PageNumber + 1), currentFilter = ViewData["CurrentFilter"] })"
                   class="btn page-link @nextDisabled">></a>
            <li class="page-item">
                <a href="@Url.Action("Index", "UsersAdmin", new { page = (Model.PageCount), currentFilter = ViewData["CurrentFilter"] })"
                   class="btn page-link @nextDisabled">>></a>
        </ul>
    </nav>
}