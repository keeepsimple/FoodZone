@model ReservationViewModel
@{
    ViewBag.Title = "Sửa Đơn Đặt Bàn";
}

<h2>Sửa Đơn Đặt Bàn</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(x => x.UserId)
    <div class="form-horizontal row">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group col-md-6">
            Tên khách hàng
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @disabled = "disable" } })
        </div>

        <div class="form-group col-md-6">
            Số điện thoại
            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", @disabled = "disable" } })
        </div>

        <div class="form-group col-md-6">
            Ngày đặt bàn
            @Html.EditorFor(model => model.ReservationDate, new { htmlAttributes = new { @class = "form-control", @disabled = "disable" } })
        </div>

        <div class="form-group col-md-6">
            Số lượng bàn
            @Html.EditorFor(model => model.Capacity, new { htmlAttributes = new { @class = "form-control", @disabled = "disable" } })
        </div>

        <div class="form-group col-md-6">
            Mã khuyến mãi
            @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", @disabled = "disable" } })
        </div>

        <div class="form-group col-md-12">
            Ghi chú
            @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control", @disabled = "disable" } })
        </div>

        <div class="form-group col-md-12">
            @Html.Action("GetReservationDetails", "ReservationAdmin", new { reservationId = Model.Id })
        </div>

        <div class="form-group col-md-6">
            Lý do huỷ
            <div class="col-md-6">
                <textarea cols="50" data-val="true" data-val-length="Lí do huỷ không lớn hơn 500 ký tự"
                          data-val-length-max="500"
                          id="CancelReason" name="CancelReason" onkeyup="cancelReservation()" rows="2">@Model.CancelReason</textarea>
                @Html.ValidationMessageFor(model => model.CancelReason, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-6">
            Trạng Thái: @(Model.Status == 0 ? "Mới" : Model.Status == 1 ? "Khách đã đến" : Model.Status == 2 ? "Hoàn thành" : "Huỷ đặt bàn" )
        </div>

        <div class="form-group form-button mt-4 col-md-12 ">
            @if (Model.Status == 0)
            {
                <input type="submit" name="signup" id="signup" class="btn btn-success" value="Khách đã đến" />
            }
            else if (Model.Status == 1)
            {
                <input type="submit" name="signup" id="signup" class="btn btn-success" value="Hoàn thành" />
            }

            @Html.ActionLink("Trở Về", "Index", null, new { @class = "btn btn-light ml-2" })
        </div>
    </div>
}

@section scripts{
    <script>
        const textarea = document.getElementById("CancelReason");
        function cancelReservation() {
            var check = textarea.value;
            console.log("1111", check)
            if (check != "") {
                document.getElementById("signup").value = "Huỷ đặt bàn";
            } else {
                document.getElementById("signup").value = "Khách đã đến";
            }
        }
    </script>
}