@model VoucherViewModel

@{
    ViewBag.Title = "Sửa Ưu Đãi";
    <link rel="stylesheet" href="//code.jquery.com/ui/1.13.1/themes/base/jquery-ui.css">
}

<h2>Sửa Ưu Đãi</h2>

@using (Html.BeginForm("Edit", "VoucherAdmin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-md-12">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })&nbsp; <p class="d-inline-block text-danger">*</p>
            <div>
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label" })&nbsp; <p class="d-inline-block text-danger">*</p>
            <div>
                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group col-md-6 mt-3">
            @Html.LabelFor(model => model.ExpiredDate, htmlAttributes: new { @class = "control-label col-md-3" })&nbsp; <p class="d-inline-block text-danger">*</p>
            <div>
                @Html.EditorFor(model => model.ExpiredDate, new { htmlAttributes = new { @class = "form-control" }, id = "ExpiredDate" })
                @Html.ValidationMessageFor(model => model.ExpiredDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-6 mt-3">
            @Html.LabelFor(model => model.Level, htmlAttributes: new { @class = "control-label col-md-2" })
            <div>
                <select class="custom-select" name="Level" id="inputGroupSelect01" >
                    <option value="0" @(Model.Level == 0? "selected":"")>Level 0: Người dùng mới</option>
                    <option value="1" @(Model.Level == 1? "selected":"")>Level 1: Người dùng đặt hơn 1 bàn</option>
                    <option value="15" @(Model.Level == 15? "selected":"")>Level 2: Người dùng đặt hơn 15 bàn</option>
                    <option value="30" @(Model.Level == 30? "selected":"")>Level 3: Người dùng đặt hơn 30 bàn</option>
                    <option value="50" @(Model.Level == 50? "selected":"")>Level 4: Người dùng đặt hơn 50 bàn</option>
                    <option value="80" @(Model.Level == 80? "selected":"")>Level 5: Người dùng đặt hơn 80 bàn</option>
                </select>
            </div>
        </div>

        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.ShortDescription, htmlAttributes: new { @class = "control-label" })&nbsp; <p class="d-inline-block text-danger">*</p>
            <div>
                @Html.EditorFor(model => model.ShortDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
            </div>
        </div>




        <div class="form-group col-md-12">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label" })
            <div>
                <textarea class="form-control" name="Content" id="ckeditor">@Model.Content</textarea>
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-6 mt-3">
            @Html.HiddenFor(m => m.Image)
            <div>
                <img id="showImage" src="~/assets/images/@Model.Image" class="img-home form-control w-50 h-50 bg-light mr-2" alt="">


                <input style=" opacity: 0.0;" type="file" class="form-control" id="avatar" name="uploadImage" accept="image/png, image/jpeg" />
            </div>
        </div>

        <div class="form-group col-md-6 mt-3">
            @if (Model.Status == 0)
            {
                <p class="text-danger">Hết hiệu lực</p>
            }
            else
            {
                <p class="text-success">Còn hiệu lực</p>
            }
        </div>

        <div class="form-group form-button mt-4 col-md-12">
            <input type="submit" name="signup" id="signup" class="btn btn-success" value="Sửa" />
            @Html.ActionLink("Trở Về", "Index", null, new { @class = "btn btn-light ml-2" })
        </div>
    </div>
}

@section scripts {
    <script src="~/assets/js/ckeditor/ckeditor.js"></script>
    <script src="~/assets/js/ckeditor/ckeditorconfig.js"></script>
    <script src="https://code.jquery.com/ui/1.13.1/jquery-ui.js"></script>
    <script>
        $(document).ready(function () {
            $("#ExpiredDate").datepicker({
                changeMonth: true,
                changeYear: true, yearRange: "2022:2032", currentText: "Now"
            });
        });</script>


    <script>
        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#showImage').attr('src', e.target.result);
                }

                reader.readAsDataURL(input.files[0]);
            }
        }
        $('#showImage').on('click', function () {
            $('#avatar').trigger('click');

        });
        $("#avatar").change(function () {
            if (this.files[0].type == "image/jpeg" || this.files[0].type == "image/png") {
                readURL(this);
            }
            else {
                document.getElementById("avatar").value = ""
            }
        });
    </script>
}